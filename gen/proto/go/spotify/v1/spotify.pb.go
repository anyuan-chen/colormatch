// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: spotify/v1/spotify.proto

package spotifyv1

import (
	v1 "github.com/anyuan-chen/colormatch/gen/proto/go/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ColorMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundColor *v1.Color `protobuf:"bytes,1,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
	HighlightColor  *v1.Color `protobuf:"bytes,2,opt,name=highlight_color,json=highlightColor,proto3" json:"highlight_color,omitempty"`
}

func (x *ColorMetadataResponse) Reset() {
	*x = ColorMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorMetadataResponse) ProtoMessage() {}

func (x *ColorMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorMetadataResponse.ProtoReflect.Descriptor instead.
func (*ColorMetadataResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{0}
}

func (x *ColorMetadataResponse) GetBackgroundColor() *v1.Color {
	if x != nil {
		return x.BackgroundColor
	}
	return nil
}

func (x *ColorMetadataResponse) GetHighlightColor() *v1.Color {
	if x != nil {
		return x.HighlightColor
	}
	return nil
}

type GetColorMetadataForAlbumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SongTitle        string      `protobuf:"bytes,1,opt,name=song_title,json=songTitle,proto3" json:"song_title,omitempty"`
	BackgroundColors *v1.Palette `protobuf:"bytes,2,opt,name=background_colors,json=backgroundColors,proto3" json:"background_colors,omitempty"`
	HighlightColors  *v1.Palette `protobuf:"bytes,3,opt,name=highlight_colors,json=highlightColors,proto3" json:"highlight_colors,omitempty"`
}

func (x *GetColorMetadataForAlbumRequest) Reset() {
	*x = GetColorMetadataForAlbumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColorMetadataForAlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColorMetadataForAlbumRequest) ProtoMessage() {}

func (x *GetColorMetadataForAlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColorMetadataForAlbumRequest.ProtoReflect.Descriptor instead.
func (*GetColorMetadataForAlbumRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{1}
}

func (x *GetColorMetadataForAlbumRequest) GetSongTitle() string {
	if x != nil {
		return x.SongTitle
	}
	return ""
}

func (x *GetColorMetadataForAlbumRequest) GetBackgroundColors() *v1.Palette {
	if x != nil {
		return x.BackgroundColors
	}
	return nil
}

func (x *GetColorMetadataForAlbumRequest) GetHighlightColors() *v1.Palette {
	if x != nil {
		return x.HighlightColors
	}
	return nil
}

type GetColorMetadataForAlbumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *ColorMetadataResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetColorMetadataForAlbumResponse) Reset() {
	*x = GetColorMetadataForAlbumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColorMetadataForAlbumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColorMetadataForAlbumResponse) ProtoMessage() {}

func (x *GetColorMetadataForAlbumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColorMetadataForAlbumResponse.ProtoReflect.Descriptor instead.
func (*GetColorMetadataForAlbumResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{2}
}

func (x *GetColorMetadataForAlbumResponse) GetResponse() *ColorMetadataResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type GetColorMetadataForArtistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArtistName       string      `protobuf:"bytes,1,opt,name=artist_name,json=artistName,proto3" json:"artist_name,omitempty"`
	BackgroundColors *v1.Palette `protobuf:"bytes,2,opt,name=background_colors,json=backgroundColors,proto3" json:"background_colors,omitempty"`
	HighlightColors  *v1.Palette `protobuf:"bytes,3,opt,name=highlight_colors,json=highlightColors,proto3" json:"highlight_colors,omitempty"`
}

func (x *GetColorMetadataForArtistRequest) Reset() {
	*x = GetColorMetadataForArtistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColorMetadataForArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColorMetadataForArtistRequest) ProtoMessage() {}

func (x *GetColorMetadataForArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColorMetadataForArtistRequest.ProtoReflect.Descriptor instead.
func (*GetColorMetadataForArtistRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{3}
}

func (x *GetColorMetadataForArtistRequest) GetArtistName() string {
	if x != nil {
		return x.ArtistName
	}
	return ""
}

func (x *GetColorMetadataForArtistRequest) GetBackgroundColors() *v1.Palette {
	if x != nil {
		return x.BackgroundColors
	}
	return nil
}

func (x *GetColorMetadataForArtistRequest) GetHighlightColors() *v1.Palette {
	if x != nil {
		return x.HighlightColors
	}
	return nil
}

type GetColorMetadataForArtistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *ColorMetadataResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetColorMetadataForArtistResponse) Reset() {
	*x = GetColorMetadataForArtistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColorMetadataForArtistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColorMetadataForArtistResponse) ProtoMessage() {}

func (x *GetColorMetadataForArtistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColorMetadataForArtistResponse.ProtoReflect.Descriptor instead.
func (*GetColorMetadataForArtistResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{4}
}

func (x *GetColorMetadataForArtistResponse) GetResponse() *ColorMetadataResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

var File_spotify_v1_spotify_proto protoreflect.FileDescriptor

var file_spotify_v1_spotify_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x01, 0x0a,
	0x15, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0e,
	0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xc0,
	0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x6e, 0x67, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x3f, 0x0a, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x73, 0x12, 0x3d, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x52, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x22, 0x61, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x72, 0x74,
	0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x11, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12, 0x3d, 0x0a, 0x10, 0x68,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x52, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x6c,
	0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x22, 0x62, 0x0a, 0x21, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f,
	0x72, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x93,
	0x02, 0x0a, 0x20, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x62, 0x75, 0x6d, 0x12,
	0x2b, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72,
	0x41, 0x6c, 0x62, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73,
	0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f,
	0x72, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x79, 0x75, 0x61, 0x6e, 0x2d, 0x63, 0x68, 0x65, 0x6e, 0x2f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x76,
	0x31, 0x3b, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_spotify_v1_spotify_proto_rawDescOnce sync.Once
	file_spotify_v1_spotify_proto_rawDescData = file_spotify_v1_spotify_proto_rawDesc
)

func file_spotify_v1_spotify_proto_rawDescGZIP() []byte {
	file_spotify_v1_spotify_proto_rawDescOnce.Do(func() {
		file_spotify_v1_spotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_spotify_v1_spotify_proto_rawDescData)
	})
	return file_spotify_v1_spotify_proto_rawDescData
}

var file_spotify_v1_spotify_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_spotify_v1_spotify_proto_goTypes = []interface{}{
	(*ColorMetadataResponse)(nil),             // 0: spotify.v1.ColorMetadataResponse
	(*GetColorMetadataForAlbumRequest)(nil),   // 1: spotify.v1.GetColorMetadataForAlbumRequest
	(*GetColorMetadataForAlbumResponse)(nil),  // 2: spotify.v1.GetColorMetadataForAlbumResponse
	(*GetColorMetadataForArtistRequest)(nil),  // 3: spotify.v1.GetColorMetadataForArtistRequest
	(*GetColorMetadataForArtistResponse)(nil), // 4: spotify.v1.GetColorMetadataForArtistResponse
	(*v1.Color)(nil),                          // 5: shared.v1.Color
	(*v1.Palette)(nil),                        // 6: shared.v1.Palette
}
var file_spotify_v1_spotify_proto_depIdxs = []int32{
	5,  // 0: spotify.v1.ColorMetadataResponse.background_color:type_name -> shared.v1.Color
	5,  // 1: spotify.v1.ColorMetadataResponse.highlight_color:type_name -> shared.v1.Color
	6,  // 2: spotify.v1.GetColorMetadataForAlbumRequest.background_colors:type_name -> shared.v1.Palette
	6,  // 3: spotify.v1.GetColorMetadataForAlbumRequest.highlight_colors:type_name -> shared.v1.Palette
	0,  // 4: spotify.v1.GetColorMetadataForAlbumResponse.response:type_name -> spotify.v1.ColorMetadataResponse
	6,  // 5: spotify.v1.GetColorMetadataForArtistRequest.background_colors:type_name -> shared.v1.Palette
	6,  // 6: spotify.v1.GetColorMetadataForArtistRequest.highlight_colors:type_name -> shared.v1.Palette
	0,  // 7: spotify.v1.GetColorMetadataForArtistResponse.response:type_name -> spotify.v1.ColorMetadataResponse
	1,  // 8: spotify.v1.SpotifyImageColorMatchingService.GetColorMetadataForAlbum:input_type -> spotify.v1.GetColorMetadataForAlbumRequest
	3,  // 9: spotify.v1.SpotifyImageColorMatchingService.GetColorMetadataForArtist:input_type -> spotify.v1.GetColorMetadataForArtistRequest
	2,  // 10: spotify.v1.SpotifyImageColorMatchingService.GetColorMetadataForAlbum:output_type -> spotify.v1.GetColorMetadataForAlbumResponse
	4,  // 11: spotify.v1.SpotifyImageColorMatchingService.GetColorMetadataForArtist:output_type -> spotify.v1.GetColorMetadataForArtistResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_spotify_v1_spotify_proto_init() }
func file_spotify_v1_spotify_proto_init() {
	if File_spotify_v1_spotify_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spotify_v1_spotify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColorMetadataForAlbumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColorMetadataForAlbumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColorMetadataForArtistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColorMetadataForArtistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spotify_v1_spotify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spotify_v1_spotify_proto_goTypes,
		DependencyIndexes: file_spotify_v1_spotify_proto_depIdxs,
		MessageInfos:      file_spotify_v1_spotify_proto_msgTypes,
	}.Build()
	File_spotify_v1_spotify_proto = out.File
	file_spotify_v1_spotify_proto_rawDesc = nil
	file_spotify_v1_spotify_proto_goTypes = nil
	file_spotify_v1_spotify_proto_depIdxs = nil
}
