// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: spotify/v1/spotify.proto

package spotifyv1

import (
	v1 "github.com/anyuan-chen/colormatch/gen/proto/go/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchType int32

const (
	SearchType_SEARCH_TYPE_UNSPECIFIED SearchType = 0
	SearchType_SEARCH_TYPE_ARTIST      SearchType = 1
	SearchType_SEARCH_TYPE_ALBUM       SearchType = 2
)

// Enum value maps for SearchType.
var (
	SearchType_name = map[int32]string{
		0: "SEARCH_TYPE_UNSPECIFIED",
		1: "SEARCH_TYPE_ARTIST",
		2: "SEARCH_TYPE_ALBUM",
	}
	SearchType_value = map[string]int32{
		"SEARCH_TYPE_UNSPECIFIED": 0,
		"SEARCH_TYPE_ARTIST":      1,
		"SEARCH_TYPE_ALBUM":       2,
	}
)

func (x SearchType) Enum() *SearchType {
	p := new(SearchType)
	*p = x
	return p
}

func (x SearchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchType) Descriptor() protoreflect.EnumDescriptor {
	return file_spotify_v1_spotify_proto_enumTypes[0].Descriptor()
}

func (SearchType) Type() protoreflect.EnumType {
	return &file_spotify_v1_spotify_proto_enumTypes[0]
}

func (x SearchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchType.Descriptor instead.
func (SearchType) EnumDescriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{0}
}

type ColorMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackgroundColor *v1.Color `protobuf:"bytes,1,opt,name=background_color,json=backgroundColor,proto3" json:"background_color,omitempty"`
	HighlightColor  *v1.Color `protobuf:"bytes,2,opt,name=highlight_color,json=highlightColor,proto3" json:"highlight_color,omitempty"`
}

func (x *ColorMetadataResponse) Reset() {
	*x = ColorMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorMetadataResponse) ProtoMessage() {}

func (x *ColorMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorMetadataResponse.ProtoReflect.Descriptor instead.
func (*ColorMetadataResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{0}
}

func (x *ColorMetadataResponse) GetBackgroundColor() *v1.Color {
	if x != nil {
		return x.BackgroundColor
	}
	return nil
}

func (x *ColorMetadataResponse) GetHighlightColor() *v1.Color {
	if x != nil {
		return x.HighlightColor
	}
	return nil
}

type GetColorMetadataForSpotifyAssetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token            []byte      `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Query            string      `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	SearchType       SearchType  `protobuf:"varint,3,opt,name=search_type,json=searchType,proto3,enum=spotify.v1.SearchType" json:"search_type,omitempty"`
	BackgroundColors *v1.Palette `protobuf:"bytes,4,opt,name=background_colors,json=backgroundColors,proto3" json:"background_colors,omitempty"`
	HighlightColors  *v1.Palette `protobuf:"bytes,5,opt,name=highlight_colors,json=highlightColors,proto3" json:"highlight_colors,omitempty"`
}

func (x *GetColorMetadataForSpotifyAssetRequest) Reset() {
	*x = GetColorMetadataForSpotifyAssetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColorMetadataForSpotifyAssetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColorMetadataForSpotifyAssetRequest) ProtoMessage() {}

func (x *GetColorMetadataForSpotifyAssetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColorMetadataForSpotifyAssetRequest.ProtoReflect.Descriptor instead.
func (*GetColorMetadataForSpotifyAssetRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{1}
}

func (x *GetColorMetadataForSpotifyAssetRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GetColorMetadataForSpotifyAssetRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetColorMetadataForSpotifyAssetRequest) GetSearchType() SearchType {
	if x != nil {
		return x.SearchType
	}
	return SearchType_SEARCH_TYPE_UNSPECIFIED
}

func (x *GetColorMetadataForSpotifyAssetRequest) GetBackgroundColors() *v1.Palette {
	if x != nil {
		return x.BackgroundColors
	}
	return nil
}

func (x *GetColorMetadataForSpotifyAssetRequest) GetHighlightColors() *v1.Palette {
	if x != nil {
		return x.HighlightColors
	}
	return nil
}

type GetColorMetadataForSpotifyAssetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *ColorMetadataResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *GetColorMetadataForSpotifyAssetResponse) Reset() {
	*x = GetColorMetadataForSpotifyAssetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetColorMetadataForSpotifyAssetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetColorMetadataForSpotifyAssetResponse) ProtoMessage() {}

func (x *GetColorMetadataForSpotifyAssetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetColorMetadataForSpotifyAssetResponse.ProtoReflect.Descriptor instead.
func (*GetColorMetadataForSpotifyAssetResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{2}
}

func (x *GetColorMetadataForSpotifyAssetResponse) GetResponse() *ColorMetadataResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type PingTokenValidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *PingTokenValidityRequest) Reset() {
	*x = PingTokenValidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingTokenValidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingTokenValidityRequest) ProtoMessage() {}

func (x *PingTokenValidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingTokenValidityRequest.ProtoReflect.Descriptor instead.
func (*PingTokenValidityRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{3}
}

func (x *PingTokenValidityRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type PingTokenValidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Valid bool `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *PingTokenValidityResponse) Reset() {
	*x = PingTokenValidityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingTokenValidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingTokenValidityResponse) ProtoMessage() {}

func (x *PingTokenValidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingTokenValidityResponse.ProtoReflect.Descriptor instead.
func (*PingTokenValidityResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{4}
}

func (x *PingTokenValidityResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type GetTrackAudioFeaturesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTrackAudioFeaturesRequest) Reset() {
	*x = GetTrackAudioFeaturesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackAudioFeaturesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackAudioFeaturesRequest) ProtoMessage() {}

func (x *GetTrackAudioFeaturesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackAudioFeaturesRequest.ProtoReflect.Descriptor instead.
func (*GetTrackAudioFeaturesRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{5}
}

func (x *GetTrackAudioFeaturesRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GetTrackAudioFeaturesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTrackAudioFeaturesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioFeatures []byte `protobuf:"bytes,1,opt,name=audio_features,json=audioFeatures,proto3" json:"audio_features,omitempty"`
}

func (x *GetTrackAudioFeaturesResponse) Reset() {
	*x = GetTrackAudioFeaturesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackAudioFeaturesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackAudioFeaturesResponse) ProtoMessage() {}

func (x *GetTrackAudioFeaturesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackAudioFeaturesResponse.ProtoReflect.Descriptor instead.
func (*GetTrackAudioFeaturesResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{6}
}

func (x *GetTrackAudioFeaturesResponse) GetAudioFeatures() []byte {
	if x != nil {
		return x.AudioFeatures
	}
	return nil
}

type GetTrackAudioAnalysisRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTrackAudioAnalysisRequest) Reset() {
	*x = GetTrackAudioAnalysisRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackAudioAnalysisRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackAudioAnalysisRequest) ProtoMessage() {}

func (x *GetTrackAudioAnalysisRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackAudioAnalysisRequest.ProtoReflect.Descriptor instead.
func (*GetTrackAudioAnalysisRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{7}
}

func (x *GetTrackAudioAnalysisRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GetTrackAudioAnalysisRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTrackAudioAnalysisResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AudioAnalysis []byte `protobuf:"bytes,1,opt,name=audio_analysis,json=audioAnalysis,proto3" json:"audio_analysis,omitempty"`
}

func (x *GetTrackAudioAnalysisResponse) Reset() {
	*x = GetTrackAudioAnalysisResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrackAudioAnalysisResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrackAudioAnalysisResponse) ProtoMessage() {}

func (x *GetTrackAudioAnalysisResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrackAudioAnalysisResponse.ProtoReflect.Descriptor instead.
func (*GetTrackAudioAnalysisResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{8}
}

func (x *GetTrackAudioAnalysisResponse) GetAudioAnalysis() []byte {
	if x != nil {
		return x.AudioAnalysis
	}
	return nil
}

type GetRecommendationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token               []byte   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ArtistIds           []string `protobuf:"bytes,2,rep,name=artist_ids,json=artistIds,proto3" json:"artist_ids,omitempty"`
	TrackIds            []string `protobuf:"bytes,3,rep,name=track_ids,json=trackIds,proto3" json:"track_ids,omitempty"`
	Genres              []string `protobuf:"bytes,4,rep,name=genres,proto3" json:"genres,omitempty"`
	RecommendationCount int32    `protobuf:"varint,5,opt,name=recommendation_count,json=recommendationCount,proto3" json:"recommendation_count,omitempty"`
}

func (x *GetRecommendationsRequest) Reset() {
	*x = GetRecommendationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendationsRequest) ProtoMessage() {}

func (x *GetRecommendationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendationsRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendationsRequest) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{9}
}

func (x *GetRecommendationsRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GetRecommendationsRequest) GetArtistIds() []string {
	if x != nil {
		return x.ArtistIds
	}
	return nil
}

func (x *GetRecommendationsRequest) GetTrackIds() []string {
	if x != nil {
		return x.TrackIds
	}
	return nil
}

func (x *GetRecommendationsRequest) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *GetRecommendationsRequest) GetRecommendationCount() int32 {
	if x != nil {
		return x.RecommendationCount
	}
	return 0
}

type GetRecommendationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Recommendations []byte `protobuf:"bytes,1,opt,name=recommendations,proto3" json:"recommendations,omitempty"`
}

func (x *GetRecommendationsResponse) Reset() {
	*x = GetRecommendationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spotify_v1_spotify_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendationsResponse) ProtoMessage() {}

func (x *GetRecommendationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spotify_v1_spotify_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendationsResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendationsResponse) Descriptor() ([]byte, []int) {
	return file_spotify_v1_spotify_proto_rawDescGZIP(), []int{10}
}

func (x *GetRecommendationsResponse) GetRecommendations() []byte {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

var File_spotify_v1_spotify_proto protoreflect.FileDescriptor

var file_spotify_v1_spotify_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x01, 0x0a,
	0x15, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x39, 0x0a, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x0e,
	0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x8d,
	0x02, 0x0a, 0x26, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x70, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f,
	0x0a, 0x11, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x52, 0x10, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x12,
	0x3d, 0x0a, 0x10, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x52, 0x0f, 0x68,
	0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x22, 0x68,
	0x0a, 0x27, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x70,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x18, 0x50, 0x69, 0x6e, 0x67,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x31, 0x0a, 0x19, 0x50, 0x69,
	0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x44, 0x0a,
	0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x66, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x1c, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x46, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x5f, 0x61, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65,
	0x73, 0x12, 0x31, 0x0a, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x72, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x58, 0x0a, 0x0a,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45,
	0x41, 0x52, 0x43, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x41, 0x52, 0x43,
	0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x53, 0x54, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x4c, 0x42, 0x55, 0x4d, 0x10, 0x02, 0x32, 0xc3, 0x04, 0x0a, 0x11, 0x53, 0x70, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25,
	0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x32, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46,
	0x6f, 0x72, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x50, 0x69,
	0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12,
	0x24, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e,
	0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x45, 0x5a, 0x43,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x79, 0x75, 0x61,
	0x6e, 0x2d, 0x63, 0x68, 0x65, 0x6e, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x73,
	0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spotify_v1_spotify_proto_rawDescOnce sync.Once
	file_spotify_v1_spotify_proto_rawDescData = file_spotify_v1_spotify_proto_rawDesc
)

func file_spotify_v1_spotify_proto_rawDescGZIP() []byte {
	file_spotify_v1_spotify_proto_rawDescOnce.Do(func() {
		file_spotify_v1_spotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_spotify_v1_spotify_proto_rawDescData)
	})
	return file_spotify_v1_spotify_proto_rawDescData
}

var file_spotify_v1_spotify_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_spotify_v1_spotify_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_spotify_v1_spotify_proto_goTypes = []interface{}{
	(SearchType)(0),                                 // 0: spotify.v1.SearchType
	(*ColorMetadataResponse)(nil),                   // 1: spotify.v1.ColorMetadataResponse
	(*GetColorMetadataForSpotifyAssetRequest)(nil),  // 2: spotify.v1.GetColorMetadataForSpotifyAssetRequest
	(*GetColorMetadataForSpotifyAssetResponse)(nil), // 3: spotify.v1.GetColorMetadataForSpotifyAssetResponse
	(*PingTokenValidityRequest)(nil),                // 4: spotify.v1.PingTokenValidityRequest
	(*PingTokenValidityResponse)(nil),               // 5: spotify.v1.PingTokenValidityResponse
	(*GetTrackAudioFeaturesRequest)(nil),            // 6: spotify.v1.GetTrackAudioFeaturesRequest
	(*GetTrackAudioFeaturesResponse)(nil),           // 7: spotify.v1.GetTrackAudioFeaturesResponse
	(*GetTrackAudioAnalysisRequest)(nil),            // 8: spotify.v1.GetTrackAudioAnalysisRequest
	(*GetTrackAudioAnalysisResponse)(nil),           // 9: spotify.v1.GetTrackAudioAnalysisResponse
	(*GetRecommendationsRequest)(nil),               // 10: spotify.v1.GetRecommendationsRequest
	(*GetRecommendationsResponse)(nil),              // 11: spotify.v1.GetRecommendationsResponse
	(*v1.Color)(nil),                                // 12: shared.v1.Color
	(*v1.Palette)(nil),                              // 13: shared.v1.Palette
}
var file_spotify_v1_spotify_proto_depIdxs = []int32{
	12, // 0: spotify.v1.ColorMetadataResponse.background_color:type_name -> shared.v1.Color
	12, // 1: spotify.v1.ColorMetadataResponse.highlight_color:type_name -> shared.v1.Color
	0,  // 2: spotify.v1.GetColorMetadataForSpotifyAssetRequest.search_type:type_name -> spotify.v1.SearchType
	13, // 3: spotify.v1.GetColorMetadataForSpotifyAssetRequest.background_colors:type_name -> shared.v1.Palette
	13, // 4: spotify.v1.GetColorMetadataForSpotifyAssetRequest.highlight_colors:type_name -> shared.v1.Palette
	1,  // 5: spotify.v1.GetColorMetadataForSpotifyAssetResponse.response:type_name -> spotify.v1.ColorMetadataResponse
	6,  // 6: spotify.v1.SpotifyAPIService.GetTrackAudioFeatures:input_type -> spotify.v1.GetTrackAudioFeaturesRequest
	8,  // 7: spotify.v1.SpotifyAPIService.GetTrackAudioAnalysis:input_type -> spotify.v1.GetTrackAudioAnalysisRequest
	10, // 8: spotify.v1.SpotifyAPIService.GetRecommendations:input_type -> spotify.v1.GetRecommendationsRequest
	2,  // 9: spotify.v1.SpotifyAPIService.GetColorMetadataForSpotifyAsset:input_type -> spotify.v1.GetColorMetadataForSpotifyAssetRequest
	4,  // 10: spotify.v1.SpotifyAPIService.PingTokenValidity:input_type -> spotify.v1.PingTokenValidityRequest
	7,  // 11: spotify.v1.SpotifyAPIService.GetTrackAudioFeatures:output_type -> spotify.v1.GetTrackAudioFeaturesResponse
	9,  // 12: spotify.v1.SpotifyAPIService.GetTrackAudioAnalysis:output_type -> spotify.v1.GetTrackAudioAnalysisResponse
	11, // 13: spotify.v1.SpotifyAPIService.GetRecommendations:output_type -> spotify.v1.GetRecommendationsResponse
	3,  // 14: spotify.v1.SpotifyAPIService.GetColorMetadataForSpotifyAsset:output_type -> spotify.v1.GetColorMetadataForSpotifyAssetResponse
	5,  // 15: spotify.v1.SpotifyAPIService.PingTokenValidity:output_type -> spotify.v1.PingTokenValidityResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_spotify_v1_spotify_proto_init() }
func file_spotify_v1_spotify_proto_init() {
	if File_spotify_v1_spotify_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spotify_v1_spotify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColorMetadataForSpotifyAssetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetColorMetadataForSpotifyAssetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingTokenValidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingTokenValidityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackAudioFeaturesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackAudioFeaturesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackAudioAnalysisRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrackAudioAnalysisResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spotify_v1_spotify_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spotify_v1_spotify_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spotify_v1_spotify_proto_goTypes,
		DependencyIndexes: file_spotify_v1_spotify_proto_depIdxs,
		EnumInfos:         file_spotify_v1_spotify_proto_enumTypes,
		MessageInfos:      file_spotify_v1_spotify_proto_msgTypes,
	}.Build()
	File_spotify_v1_spotify_proto = out.File
	file_spotify_v1_spotify_proto_rawDesc = nil
	file_spotify_v1_spotify_proto_goTypes = nil
	file_spotify_v1_spotify_proto_depIdxs = nil
}
