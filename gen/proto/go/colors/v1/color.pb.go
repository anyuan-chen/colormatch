// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: colors/v1/color.proto

package colorsv1

import (
	v1 "github.com/anyuan-chen/colormatch/gen/proto/go/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MatchColorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color   *v1.Color   `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Palette *v1.Palette `protobuf:"bytes,2,opt,name=palette,proto3" json:"palette,omitempty"`
}

func (x *MatchColorRequest) Reset() {
	*x = MatchColorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colors_v1_color_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchColorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchColorRequest) ProtoMessage() {}

func (x *MatchColorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_colors_v1_color_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchColorRequest.ProtoReflect.Descriptor instead.
func (*MatchColorRequest) Descriptor() ([]byte, []int) {
	return file_colors_v1_color_proto_rawDescGZIP(), []int{0}
}

func (x *MatchColorRequest) GetColor() *v1.Color {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *MatchColorRequest) GetPalette() *v1.Palette {
	if x != nil {
		return x.Palette
	}
	return nil
}

type MatchColorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color *v1.Color `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *MatchColorResponse) Reset() {
	*x = MatchColorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_colors_v1_color_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MatchColorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchColorResponse) ProtoMessage() {}

func (x *MatchColorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_colors_v1_color_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchColorResponse.ProtoReflect.Descriptor instead.
func (*MatchColorResponse) Descriptor() ([]byte, []int) {
	return file_colors_v1_color_proto_rawDescGZIP(), []int{1}
}

func (x *MatchColorResponse) GetColor() *v1.Color {
	if x != nil {
		return x.Color
	}
	return nil
}

var File_colors_v1_color_proto protoreflect.FileDescriptor

var file_colors_v1_color_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x1a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a, 0x11, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x52, 0x07, 0x70, 0x61, 0x6c, 0x65,
	0x74, 0x74, 0x65, 0x22, 0x3c, 0x0a, 0x12, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x32, 0x63, 0x0a, 0x16, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x2e, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x79, 0x75, 0x61, 0x6e, 0x2d, 0x63, 0x68, 0x65, 0x6e,
	0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x2f,
	0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_colors_v1_color_proto_rawDescOnce sync.Once
	file_colors_v1_color_proto_rawDescData = file_colors_v1_color_proto_rawDesc
)

func file_colors_v1_color_proto_rawDescGZIP() []byte {
	file_colors_v1_color_proto_rawDescOnce.Do(func() {
		file_colors_v1_color_proto_rawDescData = protoimpl.X.CompressGZIP(file_colors_v1_color_proto_rawDescData)
	})
	return file_colors_v1_color_proto_rawDescData
}

var file_colors_v1_color_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_colors_v1_color_proto_goTypes = []interface{}{
	(*MatchColorRequest)(nil),  // 0: colors.v1.MatchColorRequest
	(*MatchColorResponse)(nil), // 1: colors.v1.MatchColorResponse
	(*v1.Color)(nil),           // 2: shared.v1.Color
	(*v1.Palette)(nil),         // 3: shared.v1.Palette
}
var file_colors_v1_color_proto_depIdxs = []int32{
	2, // 0: colors.v1.MatchColorRequest.color:type_name -> shared.v1.Color
	3, // 1: colors.v1.MatchColorRequest.palette:type_name -> shared.v1.Palette
	2, // 2: colors.v1.MatchColorResponse.color:type_name -> shared.v1.Color
	0, // 3: colors.v1.PaletteMatchingService.MatchColor:input_type -> colors.v1.MatchColorRequest
	1, // 4: colors.v1.PaletteMatchingService.MatchColor:output_type -> colors.v1.MatchColorResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_colors_v1_color_proto_init() }
func file_colors_v1_color_proto_init() {
	if File_colors_v1_color_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_colors_v1_color_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchColorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_colors_v1_color_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MatchColorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_colors_v1_color_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_colors_v1_color_proto_goTypes,
		DependencyIndexes: file_colors_v1_color_proto_depIdxs,
		MessageInfos:      file_colors_v1_color_proto_msgTypes,
	}.Build()
	File_colors_v1_color_proto = out.File
	file_colors_v1_color_proto_rawDesc = nil
	file_colors_v1_color_proto_goTypes = nil
	file_colors_v1_color_proto_depIdxs = nil
}
